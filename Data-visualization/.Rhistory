#for scatterplot
#Install library first
library(rgl)
q()
## Matrix
x <- 1:25
length(x)
#Dimension
dim(x)
#Dimension
dim(x) <- 2
## Matrix
x <- 1:25
#Find length
length(x)
#Dimension
dim(x) <- 2
#Dimension
dim(x) <- c(5,5)
print(x)
m1 <- matrix(1:25, ncol=5)
m2 <- matrix(1:6, ncol=3, nrow=2,byrow=T)
## element wise computation
m2 + 100
m2 *4
my_name <- "Toy"
my_friends <- c("Wan", "Ink","Zue")
m1 <- matrix(1:25,ncol=5)
R_is_cool <- TRUE
my_list <- list(myname, my_friends, R_is_cool)
my_list <- list(my_name, my_friends, R_is_cool)
print(my_list)
my_list <- list(item1 = my_name,
items2 =  my_friends,
items3 = m1  R_is_cool)
my_list <- list(item1 = my_name,
items2 =  my_friends,
items3 = m1,
items4 =R_is_cool)
print(my_list)
#Access list
my_list$items3
data.frame(friends,ages,locations,movie_lover)
friends <- c("Wan","Ink", "Ana", "Bee", "Top")
ages <- c(26,27,32,31,28)
locations <- c("New York ", "London", "London", "Tokyo", "Manchester")
movie_lover <- c(TRUE,TRUE,FALSE,TRUE,TRUE)
data.frame(friends,ages,locations,movie_lover)
view(df)
friends <- c("Wan","Ink", "Ana", "Bee", "Top")
ages <- c(26,27,32,31,28)
locations <- c("New York ", "London", "London", "Tokyo", "Manchester")
movie_lover <- c(TRUE,TRUE,FALSE,TRUE,TRUE)
data.frame(friends,ages,locations,movie_lover)
view(df)
ages[ages > 30]
#Access age of top
ages["Top"]
#Access age of top
ages["Wan"]
ages
ages["Wan"]
getwd()
setwd("~/Documents/GitHub/datarockie-learning-/Data-visualization")
#Get tidyverse
libary(tidyverse)
install(tidyberse)
install.packages("tidyverse")
#Get tidyverse
libary(tidyverse)
#Get tidyverse
library(tidyverse)
#Basic plot (base R)
hist(mtcars)
#Basic plot (base R)
hist(mtcars$mpg)
par(mar=c(5.1, 4.1, 4.1, 2.1), mgp=c(3, 1, 0), las=0)
#Basic plot (base R)
par(mar=c(5.1, 4.1, 4.1, 2.1), mgp=c(3, 1, 0), las=0)
hist(mtcars$mpg)
hist(mtcars$hp)
#finding mean
mean(mtcars$hp)
#Analyzing horse power
hist(mtcars$hp)
mean(mtcars$hp)
median(mtcars$hp)
str(mtcars)
mtcars$am <- factor(mtcars$am
levels = c(0,1),
labels = c("Auto","Manual"))
#changing numeric to factor
str(mtcars)
mtcars$am <- factor(mtcars$am,
levels = c(0,1),
labels = c("Auto","Manual"))
str(mtcars)
mtcars$am
#Set working directory
setwd("~/Documents/GitHub/datarockie-learning-/Data-visualization")
#Get tidyverse
library(tidyverse)
#Basic plot (base R)
par(mar=c(5.1, 4.1, 4.1, 2.1), mgp=c(3, 1, 0), las=0)
#plot histrogram
hist(mtcars$mpg)
hist(mtcars$hp)
#Analyzing horse power
hist(mtcars$hp)
mean(mtcars$hp)
median(mtcars$hp)
mtcars$am
#Bar plot one quanlitative variable
barplot(table(mtcars$am))
##box plot
boxplot(mtcars$hp)
#fivenum to check numbers min max lower upper quatile
fivenum(mtcars$hp)
quantile(mtcars$hp, probs = c(.25,.5,.75))
max(mtcars$hp)
##explaining fivenum
min(mtcars$hp)
quantile(mtcars$hp, probs = c(.25,.5,.75))
max(mtcars$hp)
##whisker calculation
Q3 <- quantile(mtcars$hp, probs = .75)
Q1 <- quantile(mtcars$hp, probs = .25)
IQR_hp <- Q3 - Q1
print(IQR_hp)
## filter out outliers (No outliers)
mtcars_no_out <- mtcars %>%
filter(hp < 335)
boxplot(mtcars_no_out$hp)
## Boxplot 2 variables side by side
## Quanlitative x Quantitative
boxplot(mpg ~ am, data = mtcars)
boxplot(mpg ~ am, data = mtcars)
data("mtcars")
## Boxplot 2 variables side by side
## Quanlitative x Quantitative
data(mtcars)
mtcars$am <- factor(mtcars$am,
levels = c(0,1),
labels = c("Auto","Manual"))
boxplot(mpg ~ am, data = mtcars )
boxplot(mpg ~ am, data = mtcars,
col = c("gold","salmon"))
# Scatterplot
plot(mtcars)
# Scatterplot
plot(mtcars$hp,mtcars$mpg)
# Scatterplot
plot(mtcars$hp,mtcars$mpg, pch = 16)
# Scatterplot
plot(mtcars$hp,mtcars$mpg, pch = 16 col = "blue")
# Scatterplot
plot(mtcars$hp,mtcars$mpg, pch = 16, col = "blue")
lm(mpg-hp,data= mtcars)
lm(mpg - hp,data= mtcars)
# Scatterplot
plot(mtcars$hp,mtcars$mpg, pch = 16, col = "blue" main = "my First scatter plot", xlab = "Hourse Power", ylab = "Miles Per Gallon")
# Scatterplot
plot(mtcars$hp,mtcars$mpg, pch = 16, col = "blue" ,main = "my First scatter plot", xlab = "Hourse Power", ylab = "Miles Per Gallon")
#ggplot2
## library tidyverse
library(tidyverse)
## First Plot
ggplot(data= mtcars, mapping = aes(x = hp, y = mpg))
## First Plot
ggplot(data= mtcars, mapping = aes(x = hp, y = mpg)) +
geom_point()
## First Plot
#geom_point() = scatterplot
ggplot(data= mtcars, mapping = aes(x = hp, y = mpg)) +
geom_point()
geom_smooth()
## First Plot
#geom_point() = scatterplot
ggplot(data= mtcars, mapping = aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth()
## First Plot
#geom_point() = scatterplot
ggplot(data= mtcars, mapping = aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth() +
geom_rug()
## Second plot
ggplot(mtcars,aes(hp))
## Second plot
ggplot(mtcars,aes(hp,mpg))
## Second plot
ggplot(mtcars,aes(hp,mpg)) +
geom_poin()
## Second plot
ggplot(mtcars,aes(hp,mpg)) +
geom_point()
## First Plot
#geom_point() = scatterplot
ggplot(data= mtcars, mapping = aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth() +
geom_rug()
## Second plot
ggplot(mtcars,aes(hp,mpg)) +
geom_point(size = 3)
## Second plot
ggplot(mtcars,aes(hp,mpg)) +
geom_point(size = 3, col = "blue", alpha = 0.2)
## Third plot
ggplot(mtcars, aes(hp)) + geom_histrogram()
## Third plot
ggplot(mtcars, aes(hp)) +
geom_histrogram(bins = 10)
## Third plot
ggplot(mtcars, aes(hp)) +
geom_histogram(bins = 10)
## Third plot
ggplot(mtcars, aes(hp)) +
geom_histogram(bins = 10,fill = "red", alpha = 0.2 )
## forth plot
ggplot(mtcars, aes(hp)) + geom_boxplot()
p <- ggplot(mtcars,aes(hp))
ggplot(diamonds,aes(cut)) +
geom_bar(fill = "#0366fc")
ggplot(diamonds, aes(cut)) +
geom_bar()
ggplot(diamonds, aes(cut,fill=cut)) +
geom_bar()
ggplot(diamonds, mapping = aes(cut, fill-color)) +
geom_bar(position = "stack")
ggplot(diamonds, mapping = aes(cut,fill-color))+
geom_bar(position = "fill")
###SCATTER PLOT
ggplot(diamonds,aes(carat,price))
###SCATTER PLOT
ggplot(diamonds,aes(carat,price)) +
geom_point()
###SCATTER PLOT
small_diamonds <- sample_n(diamonds, 5000)
ggplot(diamonds,aes(carat,price)) +
geom_point()
#### FACET : small multiples
ggplot(small_diamonds, aes(carat,price))+
geom_point()+
geom_smooth(method = "lm", col="red")+
theme_minimal() +
lab (title = "Relationship betwen carat and price by color",
x = "Carat",
y = "Price USD",
caption = "Source: Diamonds from ggplot2 package")
#### FACET : small multiples
ggplot(small_diamonds, aes(carat,price))+
geom_point()+
geom_smooth(method = "lm", col="red")+
theme_minimal()
#### FACET : small multiples
ggplot(small_diamonds, aes(carat,price))+
geom_point()+
geom_smooth(method = "lm", col="red")+
theme_minimal() +
labs(title = "Relationship between carat and price by color ",
x = "Carat",
y = "Price USD",
caption = "Source:Diamonds from ggplot2 package")
#### Final Example
ggplot(small_diamonds, aes(carat, price, col=cut))+
geom_point(size = 3, alpha = 0.2) +
facet_wrap(~ color, ncol=2)
